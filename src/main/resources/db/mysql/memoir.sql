CREATE OR REPLACE VIEW VW_MEMOIR_CL_CNT
AS
SELECT M.ID, M.TREE_ID, M.TITLE, COUNT(C.ID) COMMENT_CNT, COUNT(L.ACTIVE) LIKE_CNT
FROM (SELECT * FROM MEMOIR WHERE MEMOIR.IS_DELETED = 0) M
         LEFT JOIN MEMOIR_COMMENT C ON M.ID = C.MEMOIR_ID
         LEFT JOIN (SELECT * FROM MEMOIR_LIKE l WHERE l.ACTIVE = 1) L ON M.ID = L.MEMOIR_ID
GROUP BY M.ID, M.TREE_ID, M.TITLE, C.ID, L.ACTIVE;

COMMENT ON TABLE VW_MEMOIR_CL_CNT IS '회고록 댓글 수, 좋아요 수';

CREATE OR REPLACE VIEW VW_MEMOIR_BOOK
AS
SELECT TREE.MEMBER_ID AS MEMBER_ID,
       MEMOIR.ID AS ID,
       MEMOIR.TREE_ID AS TREE_ID,
       MEMOIR.TITLE AS TITLE,
       DATE_FORMAT(MEMOIR.UPDATE_TIME, '%Y-%m-%d %H:%i') AS UPDATE_TIME,
       MEMOIR.VISIBILITY AS VISIBILITY,
       BOOK.ID AS BOOK_ID,
       (SELECT BOOK_CATEGORY.NAME
        FROM  BOOK_CATEGORY WHERE BOOK.BOOK_CATEGORY_ID = BOOK_CATEGORY.ID) AS BOOK_CATEGORY,
       BOOK.TITLE AS BOOK_TITLE,
       BOOK.IMAGE_FILE AS COVER_PATH,
       BOOK.AUTHOR AS BOOK_AUTHOR,
       BOOK.TRANSLATOR AS BOOK_TRANSLATOR,
       BOOK.PUBLISHER AS BOOK_PUBLISHER,
       DATE_FORMAT(BOOK.PUBLISH_DATE, '%Y-%m-%d') AS BOOK_PUBLISHED_YEAR,
       COUNT(LEAF.ID) AS LEAF_NUMS
FROM TREE
         LEFT JOIN BOOK ON TREE.BOOK_ID = BOOK.ID
         LEFT JOIN MEMOIR ON TREE.ID = MEMOIR.TREE_ID
         LEFT JOIN LEAF ON TREE.ID = LEAF.TREE_ID
WHERE MEMOIR.ID IS NOT NULL
GROUP BY LEAF.ID;

COMMENT ON TABLE VW_MEMOIR_BOOK IS '회고록 카드';
